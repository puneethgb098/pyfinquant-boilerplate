[build-system]
requires = ["hatchling", "uv"]
build-backend = "hatchling.build"

[project]
name = "pyfinquant"
version = "0.1.0"
description = "A Python library for quantitative finance"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Puneeth G B", email = "puneethgb30@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "yfinance>=0.2.0",
    "seaborn>=0.13.0",
    "requests>=2.26.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "mypy>=0.910",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "pre-commit>=2.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/puneethgb/pyfinquant"
Documentation = "https://pyfinquant.readthedocs.io/"
Repository = "https://github.com/puneethgb/pyfinquant.git"
Issues = "https://github.com/puneethgb/pyfinquant/issues"

[tool.hatch.build.targets.wheel]
packages = ["pyfinquant"]

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "PL",  # pylint
    "RUF", # ruff-specific rules
    "C4",  # flake8-comprehensions
    "T20", # flake8-print
    "D",   # pydocstyle
    "S",   # flake8-bandit
    "A",   # flake8-builtins
    "C90", # mccabe
    "ERA", # eradicate
    "PD",  # pandas-vet
]
ignore = []

[tool.ruff.isort]
known-first-party = ["pyfinquant"]
combine-as-imports = true
force-single-line = false
include-trailing-comma = true
line-length = 88
multi-line-output = 3
use-parentheses = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "PLR2004", "D100", "D103", "D104"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "-v --cov=pyfinquant --cov-report=term-missing"

[tool.coverage.run]
source = ["pyfinquant"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
] 
